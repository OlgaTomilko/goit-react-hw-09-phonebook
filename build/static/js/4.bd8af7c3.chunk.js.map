{"version":3,"sources":["redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Modal/Modal.js","components/Phonebook/Phonebook.js"],"names":["getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","number","dispatch","contact","actions","axios","post","then","data","catch","error","message","contactId","delete","a","get","makeStyles","stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","_extends","defaultTheme","useStyles","form","width","height","display","flexDirection","justifyContent","ContactForm","classes","useDispatch","useSelector","contactsSelectors","useState","setName","setNumber","onInputChange","target","id","value","className","onSubmit","e","preventDefault","map","alert","contactsOperations","type","onChange","Button","variant","color","size","Filter","useCallback","event","updateFilter","ContactList","onClose","isLoading","useEffect","handlerDelete","currentTarget","onClick","modalRoot","document","querySelector","Modal","children","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","Phonebook","showModal","setShowModal","toggleModal"],"mappings":"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","file":"static/js/4.bd8af7c3.chunk.js","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = (state) => state.contacts.items;\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getLoading = (state) => {\r\n  return state.contacts.loading;\r\n};\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getFilter,\r\n  getLoading,\r\n  getVisibleContacts,\r\n};\r\n\r\n// const getVisibleContacts = (state) => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return contacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// };\r\n","import axios from \"axios\";\r\nimport * as actions from \"./contacts-actions\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(actions.fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(actions.fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.fetchContactError(error.message));\r\n  }\r\n};\r\n\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(actions.addContactRequest());\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(actions.deleteContactError(error.message)));\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles({\r\n  form: {\r\n    width: 275,\r\n    height: 150,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-around',\r\n  },\r\n});\r\n\r\nexport default function ContactForm() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const onAdd = value => {\r\n    dispatch(contactsOperations.addContact(value));\r\n  };\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const onInputChange = ({ target: { id, value } }) => {\r\n    id === 'name' ? setName(value) : setNumber(value);\r\n  };\r\n\r\n  const isAlreadyContact = () => {\r\n    const Names = contacts.map(contact => contact.name);\r\n    return Names.includes(name);\r\n  };\r\n\r\n  const onSave = e => {\r\n    e.preventDefault();\r\n    if (name === '' || number === '') {\r\n      alert(`Complite the form!`);\r\n      return;\r\n    }\r\n    isAlreadyContact()\r\n      ? alert(`${name} is already in contacts!`)\r\n      : onAdd({ name, number });\r\n    setNumber('');\r\n    setName('');\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={onSave}>\r\n      <label>Name</label>\r\n      <input type=\"text\" onChange={onInputChange} id=\"name\" value={name} />\r\n      <label>Number</label>\r\n      <input type=\"text\" onChange={onInputChange} id=\"number\" value={number} />\r\n      <Button variant=\"contained\" color=\"primary\" size=\"small\" type=\"submit\">\r\n        Add contact\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n","import { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateFilter } from '../../redux/contacts';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const onChange = useCallback(\r\n    event => {\r\n      dispatch(updateFilter(event.target.value));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <p>Find contacts by name</p>\r\n      <input type=\"text\" onChange={onChange} id=\"find\"></input>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ContactList({ onClose }) {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const isLoading = useSelector(contactsSelectors.getLoading);\r\n  const onDelete = id => dispatch(contactsOperations.deleteContact(id));\r\n\r\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n\r\n  const handlerDelete = event => {\r\n    onDelete(event.currentTarget.id);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <p>Loading...</p>}\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id}>\r\n            {name}: {number}\r\n            <Button\r\n              color=\"secondary\"\r\n              type=\"button\"\r\n              id={id}\r\n              onClick={handlerDelete}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\n//\r\n\r\nContactList.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst Modal = ({ onClose, children }) => {\r\n  useEffect(() => {\r\n    const handleKeyDown = event => {\r\n      if (event.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [onClose]);\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.target === event.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"Modal__backdrop\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal__content\">{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport Filter from '../Filter/Filter';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Modal from '../Modal/Modal';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function Phonebook() {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showModal && (\r\n        <Modal onClose={toggleModal}>\r\n          <h1>Контакт удален</h1>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            type=\"button\"\r\n            onClick={toggleModal}\r\n          >\r\n            Закрыть\r\n          </Button>\r\n        </Modal>\r\n      )}\r\n\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList onClose={toggleModal} />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}